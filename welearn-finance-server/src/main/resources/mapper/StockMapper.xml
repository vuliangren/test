<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
  Table    : stock
  Comment  : 库存
  Mapper   : com.welearn.mapper.StockMapper
  Author   : Setsuna Jin build with CodeSmith 7.0
  CreateAt : 2018/12/19 10:20:12
-->
<mapper namespace="com.welearn.mapper.StockMapper">
  <!-- SQL 片段:所有字段 -->
  <sql id="sqlColumns" >
    id,
    createdAt,
    updatedAt,
    isEnable,
    companyId,
    type,
    parentId,
    departmentId,
    stockTypeId,
    inTransitInCount,
    inTransitOutCount,
    sumPurchaseCount,
    sumPlanConsumeCount,
    sumRealConsumeCount,
    lastConsumeAt,
    safeCount,
    maxCount,
    orderCount,
    orderAvgCostDay,
    dayAvgCostCount,
    holdingCostRatio,
    executeType
  </sql>

  <!-- SQL 片段:所有字段（带表头和 AS） -->
  <sql id="sqlColumnsAs" >
    stock.id AS id,
    stock.createdAt AS createdAt,
    stock.updatedAt AS updatedAt,
    stock.isEnable AS isEnable,
    stock.companyId AS companyId,
    stock.type AS type,
    stock.parentId AS parentId,
    stock.departmentId AS departmentId,
    stock.stockTypeId AS stockTypeId,
    stock.inTransitInCount AS inTransitInCount,
    stock.inTransitOutCount AS inTransitOutCount,
    stock.sumPurchaseCount AS sumPurchaseCount,
    stock.sumPlanConsumeCount AS sumPlanConsumeCount,
    stock.sumRealConsumeCount AS sumRealConsumeCount,
    stock.lastConsumeAt AS lastConsumeAt,
    stock.safeCount AS safeCount,
    stock.maxCount AS maxCount,
    stock.orderCount AS orderCount,
    stock.orderAvgCostDay AS orderAvgCostDay,
    stock.dayAvgCostCount AS dayAvgCostCount,
    stock.holdingCostRatio AS holdingCostRatio,
    stock.executeType AS executeType
  </sql>

  <!-- ResultMap: 默认表结构 -->
  <resultMap id="resultMapDefault" type="com.welearn.entity.po.finance.Stock" >
    <!-- Comment: 主键 -->
    <id column="id" property="id"/>
    <!-- Comment: 创建时间 -->
    <result column="createdAt" property="createdAt"/>
    <!-- Comment: 更新时间 -->
    <result column="updatedAt" property="updatedAt"/>
    <!-- Comment: 是否可用：0-不可用，1-可用 -->
    <result column="isEnable" property="isEnable"/>
    <!-- Comment: 公司id -->
    <result column="companyId" property="companyId"/>
    <!-- Comment: 类型:0-公司仓库 1-部门仓库 -->
    <result column="type" property="type"/>
    <!-- Comment: 父库存id 部门库存使用 -->
    <result column="parentId" property="parentId"/>
    <!-- Comment: 部门id 用于标记属于哪个部门, 对于公司仓库为空 -->
    <result column="departmentId" property="departmentId"/>
    <!-- Comment: 库存类型id -->
    <result column="stockTypeId" property="stockTypeId"/>
    <!-- Comment: 在途入库数量(内含数量 表示将有货物运进来) -->
    <result column="inTransitInCount" property="inTransitInCount"/>
    <!-- Comment: 在途出库数量(内含数量 表示将有货物运出去) -->
    <result column="inTransitOutCount" property="inTransitOutCount"/>
    <!-- Comment: 总购买量(内含数量) -->
    <result column="sumPurchaseCount" property="sumPurchaseCount"/>
    <!-- Comment: 计划总消耗量(内含数量) 医院库存出库 到 部门库存时登记该值 (部门库存时则与总购买量一致) -->
    <result column="sumPlanConsumeCount" property="sumPlanConsumeCount"/>
    <!-- Comment: 实际总消耗量(内含数量) 部门库存出库 时 登记该值 -->
    <result column="sumRealConsumeCount" property="sumRealConsumeCount"/>
    <!-- Comment: 最近一次实际消耗时间 -->
    <result column="lastConsumeAt" property="lastConsumeAt"/>
    <!-- Comment: 安全库存量(加急订货耗时天数 * 平均日消耗量) -->
    <result column="safeCount" property="safeCount"/>
    <!-- Comment: 最高库存量(到达订货存量点时, 订购 (最高库存量 - 安全库存量)/包装内含数量 包装数量 的货物 ) -->
    <result column="maxCount" property="maxCount"/>
    <!-- Comment: 订货存量点(平均订货耗时天数 * 平均日消耗量 + 安全库存量) -->
    <result column="orderCount" property="orderCount"/>
    <!-- Comment: 平均订货耗时(天, 计算最近一年的平均值, 每月更新一次) -->
    <result column="orderAvgCostDay" property="orderAvgCostDay"/>
    <!-- Comment: 平均每日消耗(内含数量, 计算最近三月的平均值, 每月更新一次) -->
    <result column="dayAvgCostCount" property="dayAvgCostCount"/>
    <!-- Comment: 库存持有成本占比(0-100.00) -->
    <result column="holdingCostRatio" property="holdingCostRatio"/>
    <!-- Comment: 执行: 0-按计划执行(批量采购) 1-按实际执行(零库存, 但部门出库登记需及时) -->
    <result column="executeType" property="executeType"/>
  </resultMap>

  <!-- 按主键查询数据 -->
  <select id="selectByPK" resultType="com.welearn.entity.po.finance.Stock" parameterType="java.lang.String">
    SELECT
      <include refid="sqlColumns"/>
    FROM stock
    WHERE id = #{id}
  </select>

  <!-- 按条件查询数据 -->
  <select id="selectByCondition" resultType="com.welearn.entity.po.finance.Stock" parameterType="com.welearn.entity.qo.finance.StockQueryCondition" >
    SELECT
      <include refid="sqlColumns"/>
    FROM stock
      <where>
        <if test="id != null" >
          id = #{id}
        </if>
        <if test="createdAt != null" >
          AND createdAt = #{createdAt}
        </if>
        <if test="updatedAt != null" >
          AND updatedAt = #{updatedAt}
        </if>
        <if test="isEnable != null" >
          AND isEnable = #{isEnable}
        </if>
        <if test="companyId != null" >
          AND companyId = #{companyId}
        </if>
        <if test="type != null" >
          AND type = #{type}
        </if>
        <if test="parentId != null" >
          AND parentId = #{parentId}
        </if>
        <if test="departmentId != null" >
          AND departmentId = #{departmentId}
        </if>
        <if test="stockTypeId != null" >
          AND stockTypeId = #{stockTypeId}
        </if>
        <if test="inTransitInCount != null" >
          AND inTransitInCount = #{inTransitInCount}
        </if>
        <if test="inTransitOutCount != null" >
          AND inTransitOutCount = #{inTransitOutCount}
        </if>
        <if test="sumPurchaseCount != null" >
          AND sumPurchaseCount = #{sumPurchaseCount}
        </if>
        <if test="sumPlanConsumeCount != null" >
          AND sumPlanConsumeCount = #{sumPlanConsumeCount}
        </if>
        <if test="sumRealConsumeCount != null" >
          AND sumRealConsumeCount = #{sumRealConsumeCount}
        </if>
        <if test="lastConsumeAt != null" >
          AND lastConsumeAt = #{lastConsumeAt}
        </if>
        <if test="safeCount != null" >
          AND safeCount = #{safeCount}
        </if>
        <if test="maxCount != null" >
          AND maxCount = #{maxCount}
        </if>
        <if test="orderCount != null" >
          AND orderCount = #{orderCount}
        </if>
        <if test="orderAvgCostDay != null" >
          AND orderAvgCostDay = #{orderAvgCostDay}
        </if>
        <if test="dayAvgCostCount != null" >
          AND dayAvgCostCount = #{dayAvgCostCount}
        </if>
        <if test="holdingCostRatio != null" >
          AND holdingCostRatio = #{holdingCostRatio}
        </if>
        <if test="executeType != null" >
          AND executeType = #{executeType}
        </if>
        <!-- START USER DEFINED -->
        
        <!-- End USER DEFINED -->
      </where>
    ORDER BY createdAt ASC, updatedAt DESC
  </select>

  <!-- 查询所有数据 -->
  <select id="selectAll" resultType="com.welearn.entity.po.finance.Stock" >
    SELECT
      <include refid="sqlColumns"/>
    FROM stock
  </select>

  <!-- 获取数据条数 -->
  <select id="countAll" resultType="java.lang.Integer" >
    SELECT count(id)
    FROM stock
  </select>
  
  <!-- 更新数据（全部） -->
  <update id="updateByPK" parameterType="com.welearn.entity.po.finance.Stock" >
    UPDATE stock
    <set>
      createdAt = #{createdAt},
      updatedAt = #{updatedAt},
      isEnable = #{isEnable},
      companyId = #{companyId},
      type = #{type},
      parentId = #{parentId},
      departmentId = #{departmentId},
      stockTypeId = #{stockTypeId},
      inTransitInCount = #{inTransitInCount},
      inTransitOutCount = #{inTransitOutCount},
      sumPurchaseCount = #{sumPurchaseCount},
      sumPlanConsumeCount = #{sumPlanConsumeCount},
      sumRealConsumeCount = #{sumRealConsumeCount},
      lastConsumeAt = #{lastConsumeAt},
      safeCount = #{safeCount},
      maxCount = #{maxCount},
      orderCount = #{orderCount},
      orderAvgCostDay = #{orderAvgCostDay},
      dayAvgCostCount = #{dayAvgCostCount},
      holdingCostRatio = #{holdingCostRatio},
      executeType = #{executeType},
    </set>
    WHERE id = #{id}
  </update>

  <!-- 更新数据（选择） -->
  <update id="updateByPKSelective" parameterType="com.welearn.entity.po.finance.Stock" >
    UPDATE stock
    <set>
      <if test="createdAt != null" >
        createdAt = #{createdAt},
      </if>
      <if test="updatedAt != null" >
        updatedAt = #{updatedAt},
      </if>
      <if test="isEnable != null" >
        isEnable = #{isEnable},
      </if>
      <if test="companyId != null" >
        companyId = #{companyId},
      </if>
      <if test="type != null" >
        type = #{type},
      </if>
      <if test="parentId != null" >
        parentId = #{parentId},
      </if>
      <if test="departmentId != null" >
        departmentId = #{departmentId},
      </if>
      <if test="stockTypeId != null" >
        stockTypeId = #{stockTypeId},
      </if>
      <if test="inTransitInCount != null" >
        inTransitInCount = #{inTransitInCount},
      </if>
      <if test="inTransitOutCount != null" >
        inTransitOutCount = #{inTransitOutCount},
      </if>
      <if test="sumPurchaseCount != null" >
        sumPurchaseCount = #{sumPurchaseCount},
      </if>
      <if test="sumPlanConsumeCount != null" >
        sumPlanConsumeCount = #{sumPlanConsumeCount},
      </if>
      <if test="sumRealConsumeCount != null" >
        sumRealConsumeCount = #{sumRealConsumeCount},
      </if>
      <if test="lastConsumeAt != null" >
        lastConsumeAt = #{lastConsumeAt},
      </if>
      <if test="safeCount != null" >
        safeCount = #{safeCount},
      </if>
      <if test="maxCount != null" >
        maxCount = #{maxCount},
      </if>
      <if test="orderCount != null" >
        orderCount = #{orderCount},
      </if>
      <if test="orderAvgCostDay != null" >
        orderAvgCostDay = #{orderAvgCostDay},
      </if>
      <if test="dayAvgCostCount != null" >
        dayAvgCostCount = #{dayAvgCostCount},
      </if>
      <if test="holdingCostRatio != null" >
        holdingCostRatio = #{holdingCostRatio},
      </if>
      <if test="executeType != null" >
        executeType = #{executeType},
      </if>
    </set>
    WHERE id = #{id}
  </update>
  
  <!-- 启用 -->
  <update id="enable" parameterType="java.lang.String" >
    UPDATE stock SET isEnable = TRUE WHERE id = #{id}
  </update>
  
  <!-- 禁用 -->
  <update id="disable" parameterType="java.lang.String" >
    UPDATE stock SET isEnable = FALSE WHERE id = #{id}
  </update>
  
  <!-- 添加数据（全部） -->
  <insert id="insert" parameterType="com.welearn.entity.po.finance.Stock" useGeneratedKeys="true" keyProperty="id" >
    INSERT INTO stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      createdAt,
      updatedAt,
      isEnable,
      companyId,
      type,
      parentId,
      departmentId,
      stockTypeId,
      inTransitInCount,
      inTransitOutCount,
      sumPurchaseCount,
      sumPlanConsumeCount,
      sumRealConsumeCount,
      lastConsumeAt,
      safeCount,
      maxCount,
      orderCount,
      orderAvgCostDay,
      dayAvgCostCount,
      holdingCostRatio,
      executeType,
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
      #{id},
      #{createdAt},
      #{updatedAt},
      #{isEnable},
      #{companyId},
      #{type},
      #{parentId},
      #{departmentId},
      #{stockTypeId},
      #{inTransitInCount},
      #{inTransitOutCount},
      #{sumPurchaseCount},
      #{sumPlanConsumeCount},
      #{sumRealConsumeCount},
      #{lastConsumeAt},
      #{safeCount},
      #{maxCount},
      #{orderCount},
      #{orderAvgCostDay},
      #{dayAvgCostCount},
      #{holdingCostRatio},
      #{executeType},
    </trim>
  </insert>

  <!-- 添加数据（选择） -->
  <insert id="insertSelective" parameterType="com.welearn.entity.po.finance.Stock" useGeneratedKeys="true" keyProperty="id" >
    INSERT INTO stock 
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createdAt != null" >
        createdAt,
      </if>
      <if test="updatedAt != null" >
        updatedAt,
      </if>
      <if test="isEnable != null" >
        isEnable,
      </if>
      <if test="companyId != null" >
        companyId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="parentId != null" >
        parentId,
      </if>
      <if test="departmentId != null" >
        departmentId,
      </if>
      <if test="stockTypeId != null" >
        stockTypeId,
      </if>
      <if test="inTransitInCount != null" >
        inTransitInCount,
      </if>
      <if test="inTransitOutCount != null" >
        inTransitOutCount,
      </if>
      <if test="sumPurchaseCount != null" >
        sumPurchaseCount,
      </if>
      <if test="sumPlanConsumeCount != null" >
        sumPlanConsumeCount,
      </if>
      <if test="sumRealConsumeCount != null" >
        sumRealConsumeCount,
      </if>
      <if test="lastConsumeAt != null" >
        lastConsumeAt,
      </if>
      <if test="safeCount != null" >
        safeCount,
      </if>
      <if test="maxCount != null" >
        maxCount,
      </if>
      <if test="orderCount != null" >
        orderCount,
      </if>
      <if test="orderAvgCostDay != null" >
        orderAvgCostDay,
      </if>
      <if test="dayAvgCostCount != null" >
        dayAvgCostCount,
      </if>
      <if test="holdingCostRatio != null" >
        holdingCostRatio,
      </if>
      <if test="executeType != null" >
        executeType,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="createdAt != null" >
        #{createdAt},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt},
      </if>
      <if test="isEnable != null" >
        #{isEnable},
      </if>
      <if test="companyId != null" >
        #{companyId},
      </if>
      <if test="type != null" >
        #{type},
      </if>
      <if test="parentId != null" >
        #{parentId},
      </if>
      <if test="departmentId != null" >
        #{departmentId},
      </if>
      <if test="stockTypeId != null" >
        #{stockTypeId},
      </if>
      <if test="inTransitInCount != null" >
        #{inTransitInCount},
      </if>
      <if test="inTransitOutCount != null" >
        #{inTransitOutCount},
      </if>
      <if test="sumPurchaseCount != null" >
        #{sumPurchaseCount},
      </if>
      <if test="sumPlanConsumeCount != null" >
        #{sumPlanConsumeCount},
      </if>
      <if test="sumRealConsumeCount != null" >
        #{sumRealConsumeCount},
      </if>
      <if test="lastConsumeAt != null" >
        #{lastConsumeAt},
      </if>
      <if test="safeCount != null" >
        #{safeCount},
      </if>
      <if test="maxCount != null" >
        #{maxCount},
      </if>
      <if test="orderCount != null" >
        #{orderCount},
      </if>
      <if test="orderAvgCostDay != null" >
        #{orderAvgCostDay},
      </if>
      <if test="dayAvgCostCount != null" >
        #{dayAvgCostCount},
      </if>
      <if test="holdingCostRatio != null" >
        #{holdingCostRatio},
      </if>
      <if test="executeType != null" >
        #{executeType},
      </if>
    </trim>
  </insert>
  
  <!-- 根据主键删除 -->
  <delete id="deleteByPK" parameterType="java.lang.String" >
    DELETE FROM stock WHERE id = #{id}
  </delete>

  <!-- 删除全部数据 -->
  <delete id="deleteAll">
    DELETE FROM stock
  </delete>
  
  
  <!-- START USER DEFINED -->
  <!-- 条件查询库存详情 -->
  <select id="selectInfoByCondition" resultType="com.welearn.entity.vo.response.finance.StockInfo" parameterType="com.welearn.entity.qo.finance.StockQueryCondition" >
    SELECT
      s.*, st.type as contentType, st.itemTypeId, st.itemTypeName, st.specification, st.description
    FROM stock s
    JOIN stock_type st ON s.stockTypeId = st.id AND st.isEnable = true
    <where>
      <if test="id != null" >
        s.id = #{id}
      </if>
      <if test="isEnable != null" >
        AND s.isEnable = #{isEnable}
      </if>
      <if test="companyId != null" >
        AND s.companyId = #{companyId}
      </if>
      <if test="type != null" >
        AND s.type = #{type}
      </if>
      <if test="parentId != null" >
        AND s.parentId = #{parentId}
      </if>
      <if test="departmentId != null" >
        AND s.departmentId = #{departmentId}
      </if>
      <if test="stockTypeId != null" >
        AND s.stockTypeId = #{stockTypeId}
      </if>
      <if test="inTransitInCount != null" >
        inTransitInCount = #{inTransitInCount},
      </if>
      <if test="inTransitOutCount != null" >
        inTransitOutCount = #{inTransitOutCount},
      </if>
      <if test="sumPurchaseCount != null" >
        AND s.sumPurchaseCount = #{sumPurchaseCount}
      </if>
      <if test="sumPlanConsumeCount != null" >
        AND s.sumPlanConsumeCount = #{sumPlanConsumeCount}
      </if>
      <if test="sumRealConsumeCount != null" >
        AND s.sumRealConsumeCount = #{sumRealConsumeCount}
      </if>
      <if test="lastConsumeAt != null" >
        AND s.lastConsumeAt = #{lastConsumeAt}
      </if>
      <if test="safeCount != null" >
        AND s.safeCount = #{safeCount}
      </if>
      <if test="maxCount != null" >
        AND s.maxCount = #{maxCount}
      </if>
      <if test="orderCount != null" >
        AND s.orderCount = #{orderCount}
      </if>
      <if test="orderAvgCostDay != null" >
        AND s.orderAvgCostDay = #{orderAvgCostDay}
      </if>
      <if test="dayAvgCostCount != null" >
        AND s.dayAvgCostCount = #{dayAvgCostCount}
      </if>
      <if test="holdingCostRatio != null" >
        AND s.holdingCostRatio = #{holdingCostRatio}
      </if>
      <if test="executeType != null" >
        AND s.executeType = #{executeType}
      </if>
      <!-- START USER DEFINED -->
      <if test="contentType != null" >
        AND st.type = #{contentType}
      </if>
      <if test="itemTypeId != null" >
        AND st.itemTypeId = #{itemTypeId}
      </if>
      <if test="specification != null" >
        AND st.specification = #{specification}
      </if>
      <!-- End USER DEFINED -->
    </where>
    ORDER BY createdAt ASC, updatedAt DESC
  </select>
</mapper>