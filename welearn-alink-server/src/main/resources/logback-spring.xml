<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }) [%t]{magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wex"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] %-40.40logger{39} : %m%n%wex"/>

    <!--多环境的日志输出-->
    <!--根据不同环境（prd:生产环境，test:测试环境，dev:开发环境）来定义不同的日志输出，-->
    <!--在 logback-spring.xml中使用 springProfile 节点来定义，方法如下：-->
    <!--<springProperty scope="context" name="NAME" source="spring.application.name"/>-->
    <!--<springProperty scope="context" name="PORT" source="server.port"/>-->
    <springProfile name="prd">
        <property name="LOG_HOME" value="/home" />
    </springProfile>
    <springProfile name="dev">
        <property name="LOG_HOME" value="target/logs" />
    </springProfile>

    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <springProfile name="dev,prd">
        <!--info 级别的日志-->
        <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <encoder>
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf8</charset>
            </encoder>
            <!-- 正在记录的日志文件的路径及文件名 -->
            <file>${LOG_HOME}/log-info.log</file>
            <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <!--日志文件输出的文件名-->
                <fileNamePattern>${LOG_HOME}/info/info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <MaxHistory>30</MaxHistory>
                <maxFileSize>2MB</maxFileSize>
            </rollingPolicy>
        </appender>

        <!--WARN 级别的日志-->
        <appender name="FILE_WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>WARN</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <encoder>
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf8</charset>
            </encoder>
            <!-- 正在记录的日志文件的路径及文件名 -->
            <file>${LOG_HOME}/log-warn.log</file>
            <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${LOG_HOME}/warn/warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <MaxHistory>30</MaxHistory>
                <maxFileSize>2MB</maxFileSize>
            </rollingPolicy>
        </appender>

        <!--ERROR 级别的日志-->
        <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <encoder>
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf8</charset>
            </encoder>
            <!-- 正在记录的日志文件的路径及文件名 -->
            <file>${LOG_HOME}/log-error.log</file>
            <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${LOG_HOME}/error/error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <MaxHistory>30</MaxHistory>
                <maxFileSize>2MB</maxFileSize>
            </rollingPolicy>
        </appender>
    </springProfile>

    <!-- 日志输出级别 -->
    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE_INFO"/>
        </root>
        <logger name="org.springframework" level="WARN" />
        <logger name="com.apache.ibatis" level="TRACE"/>
        <logger name="java.sql.Connection" level="DEBUG"/>
        <logger name="java.sql.Statement" level="DEBUG"/>
        <logger name="java.sql.PreparedStatement" level="DEBUG"/>
        <!-- 防止显示太多心跳包日志 -->
        <logger name="org.apache.http" level="INFO"/>
        <logger name="com.netflix.discovery" level="INFO"/>
        <logger name="com.netflix.loadbalancer" level="INFO"/>
    </springProfile>
    <springProfile name="prd">
        <root level="INFO">
            <appender-ref ref="FILE_INFO"/>
            <appender-ref ref="FILE_WARN"/>
            <appender-ref ref="FILE_ERROR"/>
        </root>
    </springProfile>
</configuration>